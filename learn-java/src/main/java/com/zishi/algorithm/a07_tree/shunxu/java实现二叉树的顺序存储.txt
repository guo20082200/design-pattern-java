1.树的顺序存储
    树的顺序存储一般是用来存储满二叉树或者完全二叉树的，如果用来存储一般的二叉树会有空间浪费。
2.注意要点
    1.对于完全二叉树，若从上往下，从左到右，则编号为i的结点，其左孩子编号必定为2i，其右边孩子编号必定为2i+1，其双亲结点编号必定为i/2.
    2.深度为k的二叉树至多有2^k-1个结点
    3.第i层有2^(k-1)个结点
    4.对于任何一棵二叉树，若2度的结点数有n2个，则叶子树n0必定为n2+1（即n0=n2+1）
    5.抽象的结构
        1.初始化增加结点
        2.返回指定结点的左节点
        3.返回指定节点的右节点
        4.添加指定节点的左右节点
        5.判断树是否为空
3.实现细节
    1.有三种构造器，分别无无参构造器，一个参数（树的深度）的构造器，两个参数（树的深度和根结点）的构造器。定义了DEFAULE_KEEP:默认深度；定义了树的长度；定义了一个数组用来存储树种结点的信息。
    2.添加结点的方法写了两种，一种是初始化直接一次性添加，然后输入第0的时候退出添加；二种是添加指定结点的左节点和右节点，添加的时候进行判断指定结点的左节点和右节点是否为空，如果为空是否选择覆盖。
    3.返回指定结点的左节点，右节点和父节点。当前结点下标为i，左节点是2i，右节点是2i+1,父节点是i/2;需要注意的是满足这些条件的前提示，根结点的下标是从1开始。
